var bMusicMenuVisible;
var strMusicPlayerMode;
var nCurPlayerMenuItem;
var nPlayerMenuItemCount;
var bCleanupSoundtrackOnError;
var playlist;
var copyflag;
var nPlayCursor;
var nPreviousPlayCursor;
var bPlayerRandom;
var bPlayerRepeat;
var nPlayScroll;
var nPlayVisible;
var nCurMusicMenuItem;
var g_nSoundtrackId;
var g_bFullVis;
var coverpath;
var exists;
var nCurCopyDestItem;
var nCopyDestItemCount;
var nCopyDestItemScroll;
var nCurCopyDestButton;

DEF theGlobal Transform
{
	visible false
	children
	[
		Shape
		{
			appearance Appearance { material Material {  } }
			geometry DEF theCellWallMesh Mesh
		}
	]
	scale 0 0 0
	translation 500 0 0
}

function GetCellWallType()
{
	var IniFile = new Settings;
	IniFile.SetIniSection( "Dashboard Settings" );
	var a = IniFile.GetIniValue( "Current Skin" );
	theCellWallMesh.url = "A:/skins/" + a + "/cellwall.xm";
}

function initialize()
{
	GetCellWallType();
	bMusicMenuVisible = true;
	nCurPlayerMenuItem = 0;
	nCurMusicMenuItem = 0;
	playlist = new Array;
	copyflag = new Array;
	nPlayCursor = 0;
	nPreviousPlayCursor = 0;
	nPlayScroll = 0;
	bPlayerRandom = false;
	bPlayerRepeat = false;
	nPlayVisible = 9;
	g_bFullVis = false;
	coverpath = "";
	exists = false;
}

function EnterCopyDestMenu()
{
	var c = theMusicCopyMenu.children[0].children[0];
	c.destinationString.text = theTranslator.Translate("Select a destination soundtrack");
	nCurCopyDestItem = 0;
	nCopyDestItemScroll = 0;
	nCurCopyDestButton = 0;
	nCopyDestItemCount = 1 + theMusicCollection.GetSoundtrackCount();
	UpdateCopyDestMenuText();
	AdjustCopyDestScroll();
	UpdateCopyDestHighlight();
	UpdateCopyDestMenuIcon();
}

function AdjustCopyDestScroll()
{
	var c = theMusicCopyMenu.children[0].children[0];
}

function UpdateCopyDestMenuText()
{
	var c = theMusicCopyMenu.children[0].children[0];
	c.SOUND1_icon_scroll_up.visible = false;
	c.SOUND1_icon_scroll_down.visible = false;
	if (nCopyDestItemScroll > 0) { c.SOUND1_icon_scroll_up.visible = true; }
	if (nCopyDestItemScroll + 8 < nCopyDestItemCount) { c.SOUND1_icon_scroll_down.visible = true; }
	for (var i = 0; i < 8; i = i + 1)
	{
		if (nCopyDestItemScroll + i >= nCopyDestItemCount)
		{
			c.theSoundtrackMenu.children[i].visible = false;
			c.theSoundtrackMenu.children[i].children[1].children[0].geometry.text = "";
		}
		else
		{
			c.theSoundtrackMenu.children[i].visible = true;
			if (nCopyDestItemScroll + i == 0)
				c.theSoundtrackMenu.children[i].children[1].children[0].geometry.text = theTranslator.Translate("NEW SOUNDTRACK");
			else
				c.theSoundtrackMenu.children[i].children[1].children[0].geometry.text = theMusicCollection.GetSoundtrackName(nCopyDestItemScroll + i - 1);
		}
	}
}

function UpdateCopyDestHighlight()
{
	var c = theMusicCopyMenu.children[0].children[0];
	c.SOUND1_icon_scroll_up.children[0].children[0].appearance.material.name = "NavType";
	c.SOUND1_icon_scroll_down.children[0].children[0].appearance.material.name = "NavType";
	for (var i = 0; i < 8; i = i + 1)
	{
		if (i == nCurCopyDestButton)
		{
			c.theSoundtrackMenu.children[i].children[0].appearance.material.name = "GameHilite";
			c.theSoundtrackMenu.children[i].children[0].appearance.texture.url = "menu_hilight.xbx";
			c.theSoundtrackMenu.children[i].children[1].children[0].appearance.name = "Material #133";
			if(i == 0) { c.SOUND1_icon_scroll_up.children[0].children[0].appearance.material.name = "Material #133"; }
			else if(i == 7) { c.SOUND1_icon_scroll_down.children[0].children[0].appearance.material.name = "Material #133"; }
		}
		else
		{
			c.theSoundtrackMenu.children[i].children[0].appearance.material.name = "GameHilite";
			c.theSoundtrackMenu.children[i].children[0].appearance.texture.url = "outline.xbx";
			c.theSoundtrackMenu.children[i].children[1].children[0].appearance.name = "NavType";
		}
	}
}

function OnNewNamedSoundtrack()
{
	if (musicSelect == 0)
	{
		if (theDiscDrive.getTrackCount() <= 0)
		{
			theMusicCollection.error = 3;
			OnMusicCopyComplete();
			return;
		}
	}
	g_nSoundtrackId = theMusicCollection.GetSoundtrackID(musicSelect - 1);
	var nNewItem = theMusicCollection.AddSoundtrack(strKeyboardEdit);
	if (nNewItem < 0)
	{
		if (nNewItem == -1) { TellUser ("SoundtrackCreateError", ""); }
		else if (nNewItem == -3) { }
		else { TellUser("SoundtrackCopyError1", ""); }
		return;
	}
	bCleanupSoundtrackOnError = true;
	var nSoundtrack = theMusicCollection.GetSoundtrackIndexFromID(g_nSoundtrackId);
	if (musicSelect)
	{
		if ((musicSelect - 1) != nSoundtrack)
		{
			musicSelect = nSoundtrack + 1;
			UpdateMusicSelection();
		}
	}
	nCopyDestItemCount = nCopyDestItemCount + 1;
	nCurCopyDestItem = 1 + nNewItem;
	if (nCopyDestItemScroll + nCurCopyDestItem > 7) { nCopyDestItemScroll = nCurCopyDestItem - 7; }
	else if (nCopyDestItemScroll + nCurCopyDestItem < 0) { nCopyDestItemScroll = nCurCopyDestItem; }
	nCurCopyDestButton = nCurCopyDestItem - nCopyDestItemScroll;
	UpdateCopyDestMenuText();
	AdjustCopyDestScroll();
	UpdateCopyDestHighlight();
	StartCopy();
}

function StartCopy()
{
	DisableAmbientAudio();
	var nSource = musicSelect - 1;
	var nDest = nCurCopyDestItem - 1;
	ShowProgress("MUSIC COPYING");
	theMusicCollection.ClearCopyList(copyflag.length);
	var nCopyCount = 0;
	for (var i = 0; i < copyflag.length; i = i + 1)
	{
		if (copyflag[i])
		{
			theMusicCollection.AddSongToCopyList(nSource, i);
			nCopyCount = nCopyCount + 1;
		}
	}
	if (nCopyCount == 0)
	{
		if (nPlayCursor < 0) { nPlayCursor = 0; }
		theMusicCollection.AddSongToCopyList(nSource, nPlayCursor);
	}
	theMusicCollection.StartCopy(nDest);
}

function CleanupSoundtackOnError()
{
	if (bCleanupSoundtrackOnError)
	{
		bCleanupSoundtrackOnError = false;
		g_nSoundtrackId = theMusicCollection.GetSoundtrackID(musicSelect - 1);
		theMusicCollection.DeleteSoundtrack(nCurCopyDestItem - 1);
		var nSoundtrack = theMusicCollection.GetSoundtrackIndexFromID(g_nSoundtrackId);
		if (musicSelect)
		{
			if ((musicSelect - 1) != nSoundtrack)
			{
				musicSelect = nSoundtrack + 1;
				UpdateMusicSelection();
			}
		}
	}
	theMusicPlayMenu.GoBackTo();
	StartMusicCopier();
}

function UpdateCopyDestMenuIcon()
{
	var c = theMusicCopyMenu.children[0].children[0];
	c.Group01.SetTranslation(12.310000, 56.119999, -29.680000);
	c.Group02.SetTranslation(12.350000, 56.110001, -29.830000);
	c.Group03.SetTranslation(12.390000, 56.110001, -29.980000);
	c.Group04.SetTranslation(12.440000, 56.130001, -30.120001);
	c.Group01.SetAlpha(1);
	c.Group02.SetAlpha(1);
	c.Group03.SetAlpha(1);
	c.Group04.SetAlpha(1);
}

function OnMusicCopyComplete()
{
		 if (theMusicCollection.error == 1) { TellUser("SoundtrackCopyError1", "theMusicInline.children[0].CleanupSoundtackOnError()"); }
	else if (theMusicCollection.error == 2) { TellUser("SoundtrackCopyError2", "theMusicInline.children[0].CleanupSoundtackOnError()"); }
	else if (theMusicCollection.error == 3) { TellUser("SoundtrackCopyError3", "theMusicInline.children[0].CleanupSoundtackOnError()"); }
	else if (theMusicCollection.error == 4) { TellUser("SoundtrackCopyError4", "theMusicInline.children[0].CleanupSoundtackOnError()"); }
	else
	{
		CloseMessage();
		theMusicPlayMenu.GoBackTo();
		StartMusicCopier();
	}
	EnableAudio();
}

DEF theMusicCopyMenu Level
{
	archive "Music_Copy.xip"
	children
	[
		Inline
		{
			url "Music_Copy/default.xap"
			function onLoad() { EnterCopyDestMenu(); }
		}
	]

	shell Transform
	{
		scale 2.15 2.15 2.15
		translation -46.879999 54.460001 -217.359997
		children
		[
			DEF theMusicCopyMenuShellSpinner Spinner
			{
				rpm 0
				axis 0 0 0
				children
				[
					DEF theMusicCopyMenuShellWaver Waver
					{
						rpm 2.25//rpm 0.75
						children
						[
							Shape
							{
								appearance Appearance
								{
									material MaxMaterial { name "InnerWall_01" }
									texture ImageTexture
									{
										alpha true
										url "shell.xbx"
									}
								}
								geometry USE theCellWallMesh
							}
							Shape
							{
								appearance Appearance { material MaxMaterial { name "InnerWall_02" } }
								geometry Sphere { radius 1 }
							}
						]
					}
				]
			}
		]
	}
	path Viewpoint
	{
		fieldOfView 1.342000
		orientation -0.088340 -0.996100 -0.000514 -0.160500
		position -46.759998 54.430000 -215.899994
		jump false
	}
	control Joystick
	{
		function OnADown()
		{
			theMusicCopyMenu.children[0].children[0].MU_select_pod_HL.children[0].appearance.material.param = 1;
			PlaySoundA();
			bCleanupSoundtrackOnError = false;
			if (nCurCopyDestItem == 0) { ShowKeyboard(theTranslator.Translate("NAME SOUNDTRACK"), theMusicCollection.CreateSoundtrackName(theTranslator.Translate("Soundtrack")), "theMusicInline.children[0].OnNewNamedSoundtrack()", ""); }
			else { StartCopy(); }
		}

		function OnBDown()
		{
			theMusicCopyMenu.children[0].children[0].MU_back_pod_HL.children[0].appearance.material.param = 1;
			PlaySoundB();
			theMusicPlayMenu.GoBackTo();
			theMusicSubMenuOut.Play();
			StartMusicCopier();
		}

		function OnLeftThumbMoveUp()
		{
			if (nCurCopyDestItem <= 0) { return; }
			PlaySoundMenuChange();
			nCurCopyDestItem = nCurCopyDestItem - 1;
			if (nCurCopyDestButton == 0)
			{
				nCopyDestItemScroll = nCopyDestItemScroll - 1;
				AdjustCopyDestScroll();
				UpdateCopyDestMenuText();
			}
			else
			{
				nCurCopyDestButton = nCurCopyDestButton - 1;
				UpdateCopyDestHighlight();
			}
		}

		function OnLeftThumbMoveDown()
		{
			if (nCurCopyDestItem == nCopyDestItemCount - 1) { return; }
			PlaySoundMenuChange();
			nCurCopyDestItem = nCurCopyDestItem + 1;
			if (nCurCopyDestButton == 7)
			{
				nCopyDestItemScroll = nCopyDestItemScroll + 1;
				AdjustCopyDestScroll();
				UpdateCopyDestMenuText();
			}
			else
			{
				nCurCopyDestButton = nCurCopyDestButton + 1;
				UpdateCopyDestHighlight();
			}
		}
	}

	function OnActivate()
	{
		EnableAudio();
		if (children[0].children.length() > 0) { EnterCopyDestMenu(); }
	}

	function OnDeactive()
	{
		if (g_bKeyboardDisplayed) { CloseKeyboard(); }
	}
}

function ShufflePlaylist()
{
	var oldID = playlist[nPlayCursor];
	var len = playlist.length;
	for (var i = 0; i < len; i = i + 1)
	{
		var j = Math.random() * (len - 1);
		var t = playlist[i];
		playlist[i] = playlist[j];
		playlist[j] = t;
	}

	for (i = 0; i < len; i = i + 1)
	{
		if (playlist[i] == oldID)
		{
			nPlayCursor = i;
			break;
		}
	}
}

function InitPlaylist()
{
	playlist = new Array;
	copyflag = new Array;
	nPlayCursor = 0;
	if (bGoToCDPlayer)
	{
		musicSelect = 0;
		musicButton = 0;
		musicScroll = 0;
	}
	if (musicSelect == 0)
	{
		var nTracks = theDiscDrive.getTrackCount();
		for (var i = 0; i < nTracks; i = i + 1)
		{
			playlist[playlist.length] = i;
			copyflag[copyflag.length] = false;
		}
	}
	else
	{
		var nSoundtrack = musicSelect - 1;
		var nTracks = theMusicCollection.GetSoundtrackSongCount(nSoundtrack);
		for (var i = 0; i < nTracks; i = i + 1)
		{
			playlist[playlist.length] = i;
			copyflag[copyflag.length] = false;
		}
	}
}

function PlayCurrentSong()
{
	theMusicPlayer.playbackMode = 0;//temp
	if (playlist.length == 0)
	{
		PlaySoundError();
		return;
	}
	if (musicSelect == 0) { theMusicPlayer.url = "cd:" + (playlist[nPlayCursor] + 1); }
	else
	{
		var nSoundtrack = musicSelect - 1;
		theMusicPlayer.url = "st:" + theMusicCollection.GetSoundtrackSongID(nSoundtrack, playlist[nPlayCursor]);
		currentAlbum = nSoundtrack;
		currentTrack = playlist[nPlayCursor];
	}
	log("Playing " + theMusicPlayer.url);
	theMusicPlayer.Play();
	DisableAmbientAudio();
}

function SetMusicPlayPos(nPos)
{
	if(bTrackListVisible == true)
	{
		var nNewPos = nPos;
		if(nNewPos < 0) { nNewPos = 0; }
		else if (nNewPos > 1) { nNewPos = 1; }
		var x = -1.579 + ( 0.730 * nNewPos );
		var y = -0.6701;
		var z =  0.1081;
		theMusicPlayMenu.children[0].children[0].MU_L3_timeslider.SetTranslation(x, y, z);
		var m = theMusicPlayer.getMinutes();
		var s = theMusicPlayer.getSeconds();
		if(m < 10) { m = "0" + m; }
		if(s < 10) { s = "0" + s; }
		theMusicPlayMenu.children[0].children[0].MusicTimeText.text = m + ":" + s;
	}
}

function UpdateEditPlayerMenu()
{
	var c = theMusicPlayMenu.children[0].children[0];
	c.MU_L3_button_play_01.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_icon_play_01.children[0].children[0].appearance.name = "NavType";
	c.MU_L3_edit_icon_pause.children[0].children[0].appearance.name = "NavType";
	c.MU_L3_button_stop_01.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_icon_stop_01.children[0].children[0].appearance.name = "NavType";
	c.MU_L3_button_moveup.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_text_move.children[0].children[0].appearance.name = "NavType";
	c.MU_L3_icon_move_up.children[0].children[0].appearance.name = "NavType";
	c.MU_L3_button_movedown.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_text_move_0.children[0].children[0].appearance.name = "NavType";
	c.MU_L3_icon_move_down.children[0].children[0].appearance.name = "NavType";
	c.MU_L3_button_name.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_text_name.children[0].children[0].appearance.name = "NavType";
	c.MU_L3_button_delete.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_text_delete.children[0].children[0].appearance.name = "NavType";
	if (nCurPlayerMenuItem == 0)
	{
		c.MU_L3_button_play_01.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_icon_play_01.children[0].children[0].appearance.name = "Material #133";
		c.MU_L3_edit_icon_pause.children[0].children[0].appearance.name = "Material #133";
	}
	else if (nCurPlayerMenuItem == 1)
	{
		c.MU_L3_button_stop_01.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_icon_stop_01.children[0].children[0].appearance.name = "Material #133";
	}
	else if (nCurPlayerMenuItem == 2)
	{
		c.MU_L3_button_moveup.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_text_move.children[0].children[0].appearance.name = "Material #133";
		c.MU_L3_icon_move_up.children[0].children[0].appearance.name = "Material #133";
	}
	else if (nCurPlayerMenuItem == 3)
	{
		c.MU_L3_button_movedown.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_text_move_0.children[0].children[0].appearance.name = "Material #133";
		c.MU_L3_icon_move_down.children[0].children[0].appearance.name = "Material #133";
	}
	else if (nCurPlayerMenuItem == 4)
	{
		c.MU_L3_button_name.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_text_name.children[0].children[0].appearance.name = "Material #133";
	}
	else if (nCurPlayerMenuItem == 5)
	{
		c.MU_L3_button_delete.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_text_delete.children[0].children[0].appearance.name = "Material #133";
	}
}

function UpdateCopyPlayerMenu()
{
	var c = theMusicPlayMenu.children[0].children[0];
	for (var i = 0; i < nPlayerMenuItemCount; i = i + 1)
	{
		if (i == nCurPlayerMenuItem)
		{
			c.buttons_copy.children[i * 2].children[0].appearance.material.name = "GameHilite";
			c.buttons_copy.children[i * 2 + 1].children[0].children[0].appearance.name = "Material #133";
			if(i == 0) { c.MU_L3_copy_icon_pause.children[0].children[0].appearance.name = "Material #133"; }
		}
		else
		{
			c.buttons_copy.children[i * 2].children[0].appearance.material.name = "FlatSurfaces";
			c.buttons_copy.children[i * 2 + 1].children[0].children[0].appearance.name = "NavType";
			if(i == 0) { c.MU_L3_copy_icon_pause.children[0].children[0].appearance.name = "NavType"; }
		}
	}
}

function UpdatePlayerMenu()
{
	if (strMusicPlayerMode == "edit")
	{
		UpdateEditPlayerMenu();
		return;
	}

	if (strMusicPlayerMode == "copy")
	{
		UpdateCopyPlayerMenu();
		return;
	}

	var c = theMusicPlayMenu.children[0].children[0];
	c.MU_L3_button_rewind.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_icon_rewind.children[0].children[0].appearance.material.name = "NavType";
	c.MU_L3_button_play.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_icon_play.children[0].children[0].appearance.material.name = "NavType";
	c.MU_L3_play_icon_pause.children[0].children[0].appearance.name = "NavType";
	c.MU_L3_button_stop.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_icon_stop.children[0].children[0].appearance.material.name = "NavType";
	c.MU_L3_button_fastforward.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_icon_fastforward.children[0].children[0].appearance.material.name = "NavType";
	c.MU_L3_button_random.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_text_random.children[0].children[0].appearance.material.name = "NavType";
	c.MU_L3_button_repeat.children[0].appearance.material.name = "FlatSurfaces";
	c.MU_L3_text_repeat.children[0].children[0].appearance.material.name = "NavType";

	if (nCurPlayerMenuItem == 0)
	{
		c.MU_L3_button_rewind.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_icon_rewind.children[0].children[0].appearance.material.name = "Material #133";
	}
	else if (nCurPlayerMenuItem == 1)
	{
		c.MU_L3_button_play.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_icon_play.children[0].children[0].appearance.material.name = "Material #133";
		c.MU_L3_play_icon_pause.children[0].children[0].appearance.name = "Material #133";
	}
	else if (nCurPlayerMenuItem == 2)
	{
		c.MU_L3_button_stop.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_icon_stop.children[0].children[0].appearance.material.name = "Material #133";
	}
	else if (nCurPlayerMenuItem == 3)
	{
		c.MU_L3_button_fastforward.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_icon_fastforward.children[0].children[0].appearance.material.name = "Material #133";
	}
	else if (nCurPlayerMenuItem == 4)
	{
		c.MU_L3_button_repeat.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_text_repeat.children[0].children[0].appearance.material.name = "Material #133";
	}
	else if (nCurPlayerMenuItem == 5)
	{
		c.MU_L3_button_random.children[0].appearance.material.name = "GameHilite";
		c.MU_L3_text_random.children[0].children[0].appearance.material.name = "Material #133";
	}
}

function DoMusicPlayPause()
{
	if (playlist.length == 0)
	{
		PlaySoundError();
		return;
	}

	var nSoundtrack = musicSelect - 1;
	if(( currentAlbum != nSoundtrack ) | ( currentTrack != playlist[nPlayCursor] )) //this starts current song in music menu
	{
		DoMusicStop();
		PlayCurrentSong();
	}
	else if (theMusicPlayer.transportMode == 0) { PlayCurrentSong(); }		//stopped
	else { theMusicPlayer.Pause(); }										//playing
}

function DoEndOfAudio()
{
	nPlayCursor = nPlayCursor + 1;
	if (nPlayCursor >= playlist.length)
	{
		if (bPlayerRepeat == false)
		{
			log("Finished playing all songs...");
			DoMusicStop();
			nPlayCursor = 0;
			UpdateTrackList();
			NoVisualizer();
			return;
		}
		nPlayCursor = 0;
		log("Played all songs; looping...");
	}
	PlayCurrentSong();
	UpdateTrackList();
}

function DoMusicStop()
{
	theMusicPlayer.Stop();
	theMusicPlayer.url = "";
}

function SelectNextTrack(bPlaySong)
{
	if (playlist.length == 0)
	{
		PlaySoundError();
		return;
	}
	log("bPlayerRepeat - " + bPlayerRepeat );
	log("nPlayCursor   - " + nPlayCursor );
	if( bPlayerRepeat == false )
	{
		if( nPlayCursor == ( playlist.length - 1 ) ) { return; }
	}
	if( theMusicPlayer.transportMode == 2 ) { theMusicPlayer.Stop(); }
	if(nPlayCursor < 0) { nPlayCursor = 0; }
	nPlayCursor = nPlayCursor + 1;
	if(nPlayCursor >= playlist.length) { nPlayCursor = 0; }
	UpdateTrackList();
	if(bPlaySong)
	{
		if (theMusicPlayer.transportMode == 1) // playing
		{
			theMusicPlayer.Stop();
			PlayCurrentSong();
		}
	}
}

function SelectPrevTrack(bCheckTime, bPlaySong)
{
	if (playlist.length == 0)
	{
		PlaySoundError();
		return;
	}

	if (bCheckTime)
	{
		var t = theMusicPlayer.getMinutes() * 60 + theMusicPlayer.getSeconds();
		if (theMusicPlayer.transportMode == 1) // playing
		{
			if (t > 1)
			{
				if( bPlaySong )
				{
					theMusicPlayer.Stop();
					PlayCurrentSong();
				}
				return;
			}
		}
		else if (theMusicPlayer.transportMode == 2) // paused
		{
			theMusicPlayer.Stop();
			if (t > 1) { return; }
		}
	}
	else
	{
		if (theMusicPlayer.transportMode == 2) { theMusicPlayer.Stop(); }
	}
	if( bPlayerRepeat == false )
	{
		if( nPlayCursor <= 0 ) { return; }
	}

	if(nPlayCursor > 0) { nPlayCursor = nPlayCursor - 1; }
	else { nPlayCursor = playlist.length - 1; }
	if (theMusicPlayer.transportMode == 1)
	{
		if (bPlaySong)
		{
			theMusicPlayer.Stop();
			PlayCurrentSong();
		}
	}
	UpdateTrackList();
}

function UpdateTrackList()
{
	var c = theMusicPlayMenu.children[0].children[0];
	var str = "";
	var strTrack = theTranslator.Translate("TRACK");
	if (bGoToCDPlayer)
	{
		musicSelect = 0;
		musicButton = 0;
		musicScroll = 0;
	}

	if(nPlayCursor < 0) { nPlayScroll = 0; }
	else if( (nPlayCursor >= (nPlayVisible - 1)) & (nPreviousPlayCursor < nPlayCursor) & (nPlayCursor > (nPlayScroll + (nPlayVisible - 1)) )) { nPlayScroll = nPlayCursor - (nPlayVisible - 1); }
	else if(nPlayCursor < nPlayScroll) { nPlayScroll = nPlayCursor; }
	nPreviousPlayCursor = nPlayCursor;
	var nTracks;
	var nSoundtrack = musicSelect - 1;
	if(nSoundtrack < 0) { nTracks = theDiscDrive.getTrackCount(); }
	else { nTracks = theMusicCollection.GetSoundtrackSongCount(nSoundtrack); }
	if(nPlayScroll > 0) { c.MU_morearrow_up.visible = true; }
	else { c.MU_morearrow_up.visible = false; }
	if((nPlayScroll + nPlayVisible) < nTracks) { c.MU_morearrow_down.visible = true; }
	else { c.MU_morearrow_down.visible = false; }
	var nHiliteItem = nPlayCursor;
	if(nHiliteItem == -1) { nHiliteItem = 0; }
	for (var i = 0; i < nPlayVisible; i = i + 1)
	{
		var n = nPlayScroll + i;
		if (n >= nTracks)
		{
			c.TrackNames.children[i].children[0].geometry.text = "";
			c.TrackNumbers.children[i].children[0].geometry.text = "";
		}
		else
		{
			var nSong = playlist[n];
			var strHL = "";
			var strName, strTime;
			if (nSoundtrack < 0)
			{
				strName = strTrack + " " + (nSong + 1);
				strTime = theDiscDrive.FormatTrackTime(nSong);
			}
			else
			{
				strName = theMusicCollection.GetSoundtrackSongName(nSoundtrack, nSong);
				if (strName == "") { strName = strTrack + " " + (i + 1); }
				strTime = theMusicCollection.FormatSoundtrackSongTime(nSoundtrack, nSong);
			}
			strName = (nSong + 1) + ". " + strName;
			if (strMusicPlayerMode == "copy")
			{
				if(copyflag[n]) { strName = "\u00bb\u00a0" + strName; }
				else { strName = "\u00a0\u00a0\u00a0" + strName; }
			}
			c.TrackNames.children[i].children[0].geometry.text = strName;
			c.TrackNumbers.children[i].children[0].geometry.text = strTime;
			if (n == nHiliteItem)
			{
				c.TrackNames.children[i].children[0].appearance.name = "CellEgg/Partsz";
				c.TrackNumbers.children[i].children[0].appearance.name = "CellEgg/Partsz";
			}
			else
			{
				c.TrackNames.children[i].children[0].appearance.name = "Material #1335";
				c.TrackNumbers.children[i].children[0].appearance.name = "Material #1335";
			}
			str = str + strHL + strName + strHL;
			str = str + "\t";
			str = str + strHL + strTime + strHL;
			str = str + "\r";
		}
	}
	if(nTracks == 1) { c.TrackCountText.text = nTracks + " " + theTranslator.Translate("TRACK"); }
	else { c.TrackCountText.text = nTracks + " " + theTranslator.Translate("TRACKS"); }
}

function UpdateTransportIndicators()
{
	var c = theMusicPlayMenu.children[0].children[0];
	c.MU_L3_panel_playicon.visible = false;
	c.MU_L3_icon_repeat.visible = false;
	c.MU_L3_text_random_0.visible = false;
	c.MU_L3_icon_stop_02.visible = false;
	c.MU_L3_icon_pause_0.visible = false;
	if (theMusicPlayer.transportMode == 0) // Stop
	{
		SetMusicPlayPos(0);
		c.MusicTimeText.visible = false;
		c.MusicTimeText.text = "00:00";
		c.MU_L3_icon_play_01.visible = true;
		c.MU_L3_edit_icon_pause.visible = false;
		c.MU_L3_icon_play_0.visible = true;
		c.MU_L3_copy_icon_pause.visible = false;
		c.MU_L3_icon_play.visible = true;
		c.MU_L3_play_icon_pause.visible = false;
	}
	else
	{
		c.MusicTimeText.visible = true;
		if (theMusicPlayer.transportMode == 1) // Play
		{
			c.MU_L3_panel_playicon.visible = true;
			c.MU_L3_icon_play_01.visible = false;
			c.MU_L3_edit_icon_pause.visible = true;
			c.MU_L3_icon_play_0.visible = false;
			c.MU_L3_copy_icon_pause.visible = true;
			c.MU_L3_icon_play.visible = false;
			c.MU_L3_play_icon_pause.visible = true;
		}
		else if (theMusicPlayer.transportMode == 2) // Pause
		{
			c.MU_L3_icon_pause_0.visible = true;
			c.MU_L3_icon_play_01.visible = true;
			c.MU_L3_edit_icon_pause.visible = false;
			c.MU_L3_icon_play_0.visible = true;
			c.MU_L3_copy_icon_pause.visible = false;
			c.MU_L3_icon_play.visible = true;
			c.MU_L3_play_icon_pause.visible = false;
		}
	}
	if(bPlayerRandom) { c.MU_L3_text_random_0.visible = true; }
	if(bPlayerRepeat) { c.MU_L3_icon_repeat.visible = true; }
}

DEF musicMenuViewpoint Viewpoint
{
	fieldOfView 1.287000
	orientation 0.200900 0.979000 0.034330 -0.345700
	position -47.889999 54.630001 -202.399994
	jump false
}

DEF musicPlayerViewpoint Viewpoint
{
	fieldOfView 1.316000
	orientation -0.017440 -0.999800 0.000769 -0.088190
	position -45.230000 54.810001 -202.399994
	jump false
}

DEF visualizerViewpoint Viewpoint
{
	fieldOfView 1.287000
	orientation 0 1 0 0
	position -46.832825 55.132828 -204.205643
	jump false
}

function SetVisualizerAlpha(Alpha)
{
	var c = theMusicPlayMenu.children[0].children[0].theWholeThing;
	var vis = theMusicPlayMenu.children[0].children[0].MU_L3_text_tracklist01;
	var cd = theMusicPlayMenu.children[0].children[0].CD_STACK;

	for (var i=0; i<c.children.length(); i=i+1)
	{
		if (c.children[i] == vis) { }
		else if (c.children[i] == cd) { }
		else
		{
			c.children[i].fade = 0.75;
			c.children[i].SetAlpha(Alpha);
		}
	}
}

function NoVisualizer()
{
	if (visualizerViewpoint.isBound)
	{
		SetVisualizerAlpha(1);
		musicPlayerViewpoint.isBound = true;
		theMusicPlayJoystick.enableSecretKey = true;
		theScreenSaver.enabled = true;
		g_bFullVis = false;
	}
}

function UpdateMusicMenuIcon()
{
	var c = theMusicPlayMenu.children[0].children[0];

	if (musicSelect == 0)// select the cd icon
	{
		c.Group01.SetTranslation(12.260000, 54.869999, -30.950001);
		c.Group02.SetTranslation(12.310000, 55.189999, -30.780001);
		c.Group03.SetTranslation(12.360000, 55.500000, -30.600000);
		c.Group04.SetTranslation(12.430000, 55.830002, -30.420000);
		c.Group01.SetAlpha(0);
		c.Group02.SetAlpha(0);
		c.Group03.SetAlpha(0);
		c.Group04.SetAlpha(0);
	}
	else// select the soundtrack icon
	{
		c.Group01.SetTranslation(12.310000, 56.119999, -29.680000);
		c.Group02.SetTranslation(12.350000, 56.110001, -29.830000);
		c.Group03.SetTranslation(12.390000, 56.110001, -29.980000);
		c.Group04.SetTranslation(12.440000, 56.130001, -30.120001);
		c.Group01.SetAlpha(1);
		c.Group02.SetAlpha(1);
		c.Group03.SetAlpha(1);
		c.Group04.SetAlpha(1);
	}
}

function ShowMusicMenu()
{
	//bInMusicMenu = false;
	bTrackListVisible = false;
	var c = theMusicPlayMenu.children[0].children[0];
	UpdateMusicMenuIcon();
	c.MU_L3_text_tracklist01.visible = false;
	c.CD_STACK.SetAlpha(1);
	c.theMenuArm.SetRotation(0, 1, 0, 0);
	c.audio_panel.SetRotation(-1, 0, 0, -3.246000);
	c.audio_panel.SetTranslation(-45.549999, 57.18, -203.800003);
	var c = theMusicPlayMenu.children[0].children[0];
	c.back1.SetTranslation(-48.990000, 52.450001, -205.000000);
	c.back1.SetRotation(0.000000, 1.000000, 0.000000, -0.130900);
	c.select1.SetTranslation(-45.280000, 52.339999, -204.000000);
	c.select1.SetRotation(0.000000, 1.000000, 0.000000, -0.497400);
	UpdateMusicMenu();
	musicMenuViewpoint.isBound = true;
	bMusicMenuVisible = true;
	EnableAudio();
}

function StartMusicPlayer()
{
	bInMusicMenu = true;
	bTrackListVisible = true;
	var c = theMusicPlayMenu.children[0].children[0];
	c.MU_L3_text_tracklist01.visible = true;
	c.CD_STACK.SetAlpha(0);
	var c = theMusicPlayMenu.children[0].children[0];
	c.back1.SetTranslation(-47.340000, 52.809999, -204.300003);
	c.back1.SetRotation(0.000000, -1.000000, 0.000000, -0.340300);
	c.select1.SetTranslation(-43.539999, 52.740002, -204.800003);
	c.select1.SetRotation(-0.014820, 0.970100, -0.242300, -0.143900);
	c.theMenuArm.SetRotation(0, 1, 0, 2);
	c.audio_panel.SetRotation(1, 0, 0, -0.02618);
	c.audio_panel.SetTranslation(-45.549999, 55.07, -204.5);
	nPlayerMenuItemCount = 6;
	nCurPlayerMenuItem = 1;
	bPlayerRandom = false;
	bPlayerRepeat = false;
	nPlayScroll = 0;
	strMusicPlayerMode = "play";
	c.play_buttons.visible = true;
	c.buttons_copy.visible = false;
	c.buttons_edit.visible = false;
	nPlayCursor = 0;
	InitPlaylist();
	UpdateTrackList();
	if (bGoToCDPlayer)
	{
		bGoToCDPlayer = false;
		EnableInput(true);
	}
	musicPlayerViewpoint.isBound = true;
	bMusicMenuVisible = false;
	UpdatePlayerMenu();
	UpdateTransportIndicators();
	DisableAmbientAudio();
}

function StartMusicCopier()
{
	bInMusicMenu = true;
	var c = theMusicPlayMenu.children[0].children[0];
	c.MU_L3_text_tracklist01.visible = true;
	c.CD_STACK.SetAlpha(0);
	var c = theMusicPlayMenu.children[0].children[0];
	c.back1.SetTranslation(-47.340000, 52.809999, -204.300003);
	c.back1.SetRotation(0.000000, -1.000000, 0.000000, -0.340300);
	c.select1.SetTranslation(-43.539999, 52.740002, -204.800003);
	c.select1.SetRotation(-0.014820, 0.970100, -0.242300, -0.143900);
	c.theMenuArm.SetRotation(0, 1, 0, 2);
	c.audio_panel.SetRotation(1, 0, 0, -0.02618);
	c.audio_panel.SetTranslation(-45.549999, 55.07, -204.5);
	nPlayerMenuItemCount = 5;
	nCurPlayerMenuItem = 2;
	bPlayerRandom = false;
	bPlayerRepeat = false;
	nPlayScroll = 0;
	InitPlaylist();
	strMusicPlayerMode = "copy";
	c.play_buttons.visible = false;
	c.buttons_copy.visible = true;
	c.buttons_edit.visible = false;
	nPlayCursor = 0;
	UpdateTrackList();
	musicPlayerViewpoint.isBound = true;
	bMusicMenuVisible = false;
	UpdatePlayerMenu();
	UpdateTransportIndicators();
	DisableAmbientAudio();
}

function StartMusicEditor()
{
	bInMusicMenu = true;
	var c = theMusicPlayMenu.children[0].children[0];
	c.MU_L3_text_tracklist01.visible = true;
	c.CD_STACK.SetAlpha(0);
	var c = theMusicPlayMenu.children[0].children[0];
	c.back1.SetTranslation(-47.340000, 52.809999, -204.300003);
	c.back1.SetRotation(0.000000, -1.000000, 0.000000, -0.340300);
	c.select1.SetTranslation(-43.539999, 52.740002, -204.800003);
	c.select1.SetRotation(-0.014820, 0.970100, -0.242300, -0.143900);
	c.theMenuArm.SetRotation(0, 1, 0, 2);
	c.audio_panel.SetRotation(1, 0, 0, -0.02618);
	c.audio_panel.SetTranslation(-45.549999, 55.07, -204.5);
	nPlayerMenuItemCount = 6;
	nCurPlayerMenuItem = 2;
	bPlayerRandom = false;
	bPlayerRepeat = false;
	nPlayScroll = 0;
	InitPlaylist();
	strMusicPlayerMode = "edit";
	c.play_buttons.visible = false;
	c.buttons_copy.visible = false;
	c.buttons_edit.visible = true;
	nPlayCursor = 0;
	UpdateTrackList();
	musicPlayerViewpoint.isBound = true;
	bMusicMenuVisible = false;
	UpdatePlayerMenu();
	UpdateTransportIndicators();
	DisableAmbientAudio();
}

function DoDeleteSoundtrack()
{
	if(musicSelect == 0)  { return; }
	var nSoundtrack = musicSelect - 1;
	PlaySoundDelete();
	theMusicCollection.DeleteSoundtrack(nSoundtrack);
	if(musicSelect == musicCount - 1) { musicSelect = musicSelect - 1; }
	UpdateMusicSelection();
	theMusicMenu.GoBackTo();
}

function EnterMusicPlay()
{
	var c = theMusicPlayMenu.children[0].children[0];
	c.MU_L3_panel_playicon.visible = false;
	c.MU_L3_icon_repeat.visible = false;
	c.MU_L3_text_random_0.visible = false;
	c.MU_L3_icon_stop_02.visible = false;
	c.MU_L3_icon_pause_0.visible = false;
	SetVisualizerAlpha(1);
	bPlayerRandom = false;
	bPlayerRepeat = false;
	nPlayScroll = 0;
	nCurMusicMenuItem = 0;
	if (bGoToCDPlayer)
	{
		musicSelect = 0;
		musicButton = 0;
		musicScroll = 0;
	}
	var strTitle;
	if(musicSelect == 0) { strTitle = theTranslator.Translate("audio cd"); }
	else
	{
		var nSoundtrack = musicSelect - 1;
		strTitle = theMusicCollection.GetSoundtrackName(nSoundtrack);
	}
	c.TitleText1.text = strTitle;
	c.TitleText.text = strTitle;
	coverpath = "a:\\album covers\\" + strTitle + ".jpg";
	exists = theHardDrive.FileExists( coverpath );

	if( exists == true )
	{
		c.theAlbumArt.url = coverpath;
		c.theScreenAlbumArt.url = coverpath;
	}
	else
	{
		c.theAlbumArt.url = "xboxlogo.xbx";
		c.theScreenAlbumArt.url = "xboxlogo.xbx";
	}

	InitPlaylist();
	UpdateTrackList();
	UpdateTransportIndicators();
	UpdatePlayerMenu();
	ShowMusicMenu();
	if (bGoToCDPlayer)
	{
		StartMusicPlayer();
		DoMusicPlayPause();
	}
}

function UpdateMusicMenu()
{
	var c = theMusicPlayMenu.children[0].children[0];
	for (var i = 0; i < 5; i = i + 1)
	{
		if (i == nCurMusicMenuItem)
		{
			c.theMenuButtons.children[i].children[0].appearance.material.name = "GameHilite";
			c.theMenuButtons.children[i].children[0].appearance.texture.url = "menu_hilight.xbx";
			c.theMenuButtons.children[i].children[1].children[0].appearance.name = "HilightedType";
		}
		else
		{
			c.theMenuButtons.children[i].children[0].appearance.material.name = "GameHilite";
			c.theMenuButtons.children[i].children[0].appearance.texture.url = "outline.xbx";
			c.theMenuButtons.children[i].children[1].children[0].appearance.name = "NavType";
		}
	}

	if (musicSelect == 0)
	{
		c.theMenuButtons.children[2].visible = false;
		c.theMenuButtons.children[3].visible = false;
		c.theMenuButtons.children[4].visible = false;
		c._button_surround.visible = false;
		c.New_Line11.visible = false;
		c._button_surround_0.visible = true;
		c.menubutton_01_text.text = "CD Player";
		c.menubutton_02_text.text = "Copy Song(s)";
	}
	else
	{
		c.theMenuButtons.children[2].visible = true;
		c.theMenuButtons.children[3].visible = true;
		c.theMenuButtons.children[4].visible = true;
		c._button_surround.visible = true;
		c.New_Line11.visible = true;
		c._button_surround_0.visible = false;
		c.menubutton_01_text.text = "Soundtrack Player";
		c.menubutton_02_text.text = "Playlist Player\\Editor";
		c.menubutton_03_text.text = "Copy Track(s)";
		c.menubutton_04_text.text = "Edit Soundtrack";
		c.menubutton_05_text.text = "Delete Soundtrack";
	}
}

function StartSoundtrackRename()
{
	var nSoundtrack = musicSelect - 1;
	var strName = theMusicCollection.GetSoundtrackName(nSoundtrack);
	g_nSoundtrackId = theMusicCollection.GetSoundtrackID(nSoundtrack);
	ShowKeyboard(theTranslator.Translate("NAME SOUNDTRACK"), strName, "theMusicInline.children[0].FinishSoundtrackRename()", "");
}

function UpdateMusicSelection()
{
	musicCount = theMusicCollection.GetSoundtrackCount() + 1; // plus 1 for audio cd
	if ((musicCount <= 8) + (musicSelect < 8))
	{
		musicButton = musicSelect;
		musicScroll = 0;
	}
	else
	{
		if (musicSelect >= (musicCount-8))
		{
			musicButton = 8 + musicSelect - musicCount;
			musicScroll = musicCount - 8;
		}
		else
		{
			musicButton = 0;
			musicScroll = musicSelect;
		}
	}

	UpdateMusicList();
}

function FinishSoundtrackRename()
{
	theMusicCollection.SetSoundtrackName(musicSelect-1, strKeyboardEdit);
	var nSoundtrack = theMusicCollection.GetSoundtrackIndexFromID(g_nSoundtrackId);
	if ((musicSelect - 1) != nSoundtrack)
	{
		musicSelect = nSoundtrack + 1;
		UpdateMusicSelection();
	}
	var strTitle = theMusicCollection.GetSoundtrackName(nSoundtrack);
	var c = theMusicPlayMenu.children[0].children[0];
	c.TitleText1.text = strTitle;
	c.TitleText.text = strTitle;
}

function StartSongRename()
{
	if (nPlayCursor < 0)
	{
		PlaySoundError();
		return;
	}
	var nSoundtrack = musicSelect - 1;
	var nSong = playlist[nPlayCursor];
	var strName = theMusicCollection.GetSoundtrackSongName(nSoundtrack, nSong);
	ShowKeyboard(theTranslator.Translate("NAME SONG"), strName, "theMusicInline.children[0].FinishSongRename()", "");
}

function FinishSongRename()
{
	var nSoundtrack = musicSelect - 1;
	var nSong = playlist[nPlayCursor];
	theMusicCollection.SetSongName(nSoundtrack, nSong, strKeyboardEdit);
	UpdateTrackList();
}

function HandlePlayerEditMenu()
{
	if (playlist.length == 0)
	{
		PlaySoundError();
		return;
	}
	if(nPlayCursor < 0) { nPlayCursor = 0; }

	if(nCurPlayerMenuItem == 0) { DoMusicPlayPause(); }
	else if (nCurPlayerMenuItem == 1) { DoMusicStop(); }
	else if (nCurPlayerMenuItem == 2)
	{
		if (nPlayCursor > 0)
		{
			if (theMusicPlayer.transportMode != 1) // playing
				PlaySoundA();
			theMusicCollection.MoveSongUp(musicSelect - 1, playlist[nPlayCursor]);
			SelectPrevTrack(false, false);
		}
		else { PlaySoundError(); }
	}
	else if (nCurPlayerMenuItem == 3)
	{
		if (nPlayCursor < playlist.length - 1)
		{
			if (theMusicPlayer.transportMode != 1) // playing
				PlaySoundA();
			theMusicCollection.MoveSongDown(musicSelect - 1, playlist[nPlayCursor]);
			SelectNextTrack(false);
		}
		else { PlaySoundError(); }
	}
	else if (nCurPlayerMenuItem == 4)
	{
		StartSongRename();
		UpdateTrackList();
	}
	else if (nCurPlayerMenuItem == 5)
	{
		AskQuestion(theTranslator.Translate("ConfirmDeleteSong"), "theMusicInline.children[0].DoDeleteSong()", "", 1);
	}
}

function DoDeleteSong()
{
	log("DoDeleteSong: " + nPlayCursor);
	DoMusicStop();
	var nOldPlayCursor = nPlayCursor;
	theMusicCollection.DeleteSong(musicSelect - 1, playlist[nPlayCursor]);
	InitPlaylist();
	nPlayCursor = nOldPlayCursor;
	if(nPlayCursor > playlist.length - 1) { nPlayCursor = playlist.length - 1; }
	UpdateTrackList();
}

function HandlePlayerCopyMenu()
{
	if (playlist.length == 0)
	{
		PlaySoundError();
		return;
	}
	if(nPlayCursor < 0) { nPlayCursor = 0; }

	if(nCurPlayerMenuItem == 0)  { DoMusicPlayPause(); }
	else if(nCurPlayerMenuItem == 1) { DoMusicStop();  }
	else if(nCurPlayerMenuItem == 2)
	{
		if(copyflag.length == 0) { return; }
		copyflag[nPlayCursor] = 1 - copyflag[nPlayCursor];
		UpdateTrackList();
	}
	else if(nCurPlayerMenuItem == 3)
	{
		if(copyflag.length == 0) { return; }
		var bSelect = false;
		for (var i = 0; i < copyflag.length; i = i + 1)
		{
			if (copyflag[i] == false)
			{
				bSelect = true;
				break;
			}
		}
		for(i = 0; i < copyflag.length; i = i + 1) { copyflag[i] = bSelect; }
		UpdateTrackList();
	}
	else if (nCurPlayerMenuItem == 4)
	{
		DoMusicStop();
		theMusicCopyMenu.GoTo();
		theMusicSubMenuIn.Play();
	}
}

function HandlePlayerMenu()
{
	if(playlist.length == 0)
	{
		PlaySoundError();
		return;
	}
	if(nPlayCursor < 0) { nPlayCursor = 0; }

	if(nCurPlayerMenuItem == 0) { SelectPrevTrack(true, true); }// rewind
	else if (nCurPlayerMenuItem == 1) { DoMusicPlayPause(); }// play
	else if (nCurPlayerMenuItem == 2) { DoMusicStop(); }// stop
	else if (nCurPlayerMenuItem == 3) { SelectNextTrack(true); }// fast-forward
	else if (nCurPlayerMenuItem == 4) { bPlayerRepeat = 1 - bPlayerRepeat; }// repeat
	else if (nCurPlayerMenuItem == 5) // random
	{
		bPlayerRandom = 1 - bPlayerRandom;
		if (bPlayerRandom) { ShufflePlaylist(); }
		else
		{
			var oldID = playlist[nPlayCursor];
			InitPlaylist();
			nPlayCursor = oldID;
		}
		UpdateTrackList();
	}
	UpdateTransportIndicators();
}

DEF theMusicPlayMenu Level
{
	archive "Music_Play_Edit.xip"

	children
	[
		Inline
		{
			url "Music_Play_Edit/default.xap"

			function onLoad()
			{
				theMusicPlayJoystick.secretKey = "YX";
				children[0].MU_L3_text_tracklist01.children[0].appearance.texture = audioVisualizer;
				EnterMusicPlay();
			}
		}
	]

	shell Transform
	{
		scale 4.3176 4.3176 4.3176
		translation -47.220001 55 -204.300003
		children
		[
			DEF theMusicPlayMenuShellSpinner Spinner
			{
				rpm 0
				axis 0 0 0
				children
				[
					DEF theMusicPlayMenuShellWaver Waver
					{
						rpm 2.25//rpm 0.75
						children
						[
							Shape
							{
								appearance Appearance
								{
									material MaxMaterial { name "InnerWall_01" }
									texture ImageTexture
									{
										alpha true
										url "shell.xbx"
									}
								}
								geometry USE theCellWallMesh
							}
							Shape
							{
								appearance Appearance { material MaxMaterial { name "InnerWall_02" } }
								geometry Sphere { radius 1 }
							}
						]
					}
				]
			}
		]
	}
	tunnel Transform
	{
		children
		[
			Shape
			{
				appearance Appearance { material MaxMaterial { name "Tubes" } }
				geometry Mesh { url "Music/Tunnel_02-FACES.xm" }
			}
		]
	}
	path USE musicMenuViewpoint

	control DEF theMusicPlayJoystick Joystick
	{
		function OnADown()
		{
			theMusicPlayMenu.children[0].children[0].MU_select_pod_HL.children[0].appearance.material.param = 1;
			NoVisualizer();
			if(theMusicPlayer.transportMode != 1) { PlaySoundA(); }
			if (bMusicMenuVisible)
			{
				if (musicSelect == 0)
				{
					if (nCurMusicMenuItem == 0)//"Music Player"
					{
						StartMusicPlayer();
						thePlayerPanelIn.Play();
					}
					else if (nCurMusicMenuItem == 1)//"Copy Song(s)"
					{
						StartMusicCopier();
						thePlayerPanelIn.Play();
					}
				}
				else
				{
					if (nCurMusicMenuItem == 0)//"Music Player"
					{
						StartMusicPlayer();
						thePlayerPanelIn.Play();
					}
					else if (nCurMusicMenuItem == 1)//"Playlists"
					{
						StartMusicCopier();//todo - make this go to the playlist editor menu
						thePlayerPanelIn.Play();
					}
					else if (nCurMusicMenuItem == 2)//"Copy Song(s)"
					{
						StartMusicCopier();
						thePlayerPanelIn.Play();
					}
					else if (nCurMusicMenuItem == 3)//"Edit Album"
					{
						StartMusicEditor();
						thePlayerPanelIn.Play();
					}
					else if (nCurMusicMenuItem == 4)//"Delete Album"
					{
						AskQuestion(theTranslator.Translate("ConfirmDeleteSoundtrack"), "theMusicInline.children[0].DoDeleteSoundtrack()", "", 1);
					}
				}
				return;
			}
			if (strMusicPlayerMode == "edit")
			{
				theMusicPlayMenu.children[0].children[0].MU_select_pod_HL.children[0].appearance.material.param = 1;
				HandlePlayerEditMenu();
			}
			else if (strMusicPlayerMode == "copy")
			{
				theMusicPlayMenu.children[0].children[0].MU_select_pod_HL.children[0].appearance.material.param = 1;
				HandlePlayerCopyMenu();
			}
			else
			{
				theMusicPlayMenu.children[0].children[0].MU_select_pod_HL.children[0].appearance.material.param = 1;
				HandlePlayerMenu();
			}
		}

		function OnWhiteDown()
		{
			NoVisualizer();
			if(bMusicMenuVisible) { return; }
			if(strMusicPlayerMode == "play")
			{
				var nCurPlayerMenuItemSave = nCurPlayerMenuItem;
				nCurPlayerMenuItem = 1;
				UpdatePlayerMenu();
				nCurPlayerMenuItem = nCurPlayerMenuItemSave;
			}

			if(theMusicPlayer.transportMode != 1) { PlaySoundA(); }
			DoMusicPlayPause();
		}

		function OnWhiteUp()
		{
			UpdatePlayerMenu();
		}

		function OnBlackDown()
		{
			NoVisualizer();
			if (bMusicMenuVisible) { return; }

			if (playlist.length == 0)
			{
				PlaySoundError();
				return;
			}
			if (strMusicPlayerMode == "play")
			{
				var nCurPlayerMenuItemSave = nCurPlayerMenuItem;
				nCurPlayerMenuItem = 2;
				UpdatePlayerMenu();
				nCurPlayerMenuItem = nCurPlayerMenuItemSave;
			}
			PlaySoundA();
			DoMusicStop();
		}

		function OnBlackUp()
		{
			UpdatePlayerMenu();
		}

		function OnLeftDown()
		{
			NoVisualizer();
			if (bMusicMenuVisible) { return; }
			if (strMusicPlayerMode == "play")
			{
				if (theMusicPlayer.transportMode != 1) { PlaySoundA(); }
				var nCurPlayerMenuItemSave = nCurPlayerMenuItem;
				nCurPlayerMenuItem = 0;
				UpdatePlayerMenu();
				nCurPlayerMenuItem = nCurPlayerMenuItemSave;
				SelectPrevTrack(true, true);
			}
		}

		function OnLeftUp()
		{
			UpdatePlayerMenu();
		}

		function OnRightDown()
		{
			NoVisualizer();
			if (bMusicMenuVisible) { return; }

			if (strMusicPlayerMode == "play")
			{
				if (theMusicPlayer.transportMode != 1) { PlaySoundA(); }
				var nCurPlayerMenuItemSave = nCurPlayerMenuItem;
				nCurPlayerMenuItem = 3;
				UpdatePlayerMenu();
				nCurPlayerMenuItem = nCurPlayerMenuItemSave;
				SelectNextTrack(true);
			}
		}

		function OnRightUp()
		{
			UpdatePlayerMenu();
		}

		function OnBDown()
		{
			NoVisualizer();
			PlaySoundB();
			if (bMusicMenuVisible)
			{
				bInMusicMenu = false;
				theMusicPlayMenu.children[0].children[0].MU_back_pod_HL.children[0].appearance.material.param = 1;
				theMusicMenu.GoBackTo();
				theMusicSubMenuOut.Play();
			}
			else
			{
				theMusicPlayMenu.children[0].children[0].MU_back_pod_HL.children[0].appearance.material.param = 1;
				ShowMusicMenu();
				thePlayerPanelOut.Play();
			}
		}

		function OnLeftThumbMoveLeft()
		{
			NoVisualizer();
			if (bMusicMenuVisible) { return; }
			else if (nCurPlayerMenuItem > 0)
			{
				if (theMusicPlayer.transportMode != 1) { PlaySoundMenuChange(); }
				nCurPlayerMenuItem = nCurPlayerMenuItem - 1;
				UpdatePlayerMenu();
			}
		}

		function OnLeftThumbMoveRight()
		{
			NoVisualizer();
			if (bMusicMenuVisible) { return; }
			else if (nCurPlayerMenuItem < nPlayerMenuItemCount - 1)
			{
				if (theMusicPlayer.transportMode != 1) { PlaySoundMenuChange(); }
				nCurPlayerMenuItem = nCurPlayerMenuItem + 1;
				UpdatePlayerMenu();
			}
		}

		function OnLeftThumbMoveUp()
		{
			NoVisualizer();
			if (bMusicMenuVisible)
			{
				if (nCurMusicMenuItem > 0)
				{
					PlaySoundMenuChange();
					nCurMusicMenuItem = nCurMusicMenuItem - 1;
					UpdateMusicMenu();
				}
			}
			else
			{
				if (nPlayCursor > 0)
				{
					if (theMusicPlayer.transportMode != 1) { PlaySoundA(); }
					SelectPrevTrack( false,false );
				}
			}
		}

		function OnLeftThumbMoveDown()
		{
			NoVisualizer();
			if (bMusicMenuVisible)
			{
				var nMenuItemCount = 5;
				if (musicSelect == 0) { nMenuItemCount = 2; }
				if (nCurMusicMenuItem < nMenuItemCount - 1)
				{
					PlaySoundMenuChange();
					nCurMusicMenuItem = nCurMusicMenuItem + 1;
					UpdateMusicMenu();
				}
			}
			else
			{
				if (nPlayCursor < playlist.length - 1)
				{
					if (theMusicPlayer.transportMode != 1) { PlaySoundA(); }
					SelectNextTrack( false );
				}
			}
		}

		function OnPlay()
		{
			NoVisualizer();
			if (bMusicMenuVisible) { return; }
			if (strMusicPlayerMode == "play")
			{
				var nCurPlayerMenuItemSave = nCurPlayerMenuItem;
				nCurPlayerMenuItem = 1;
				UpdatePlayerMenu();
				nCurPlayerMenuItem = nCurPlayerMenuItemSave;
			}
			if (theMusicPlayer.transportMode != 1) { PlaySoundA(); }
			DoMusicPlayPause();
		}

		function OnYDown()
		{
			if( nCurMusicMenuItem == 3 )
			{
				theMusicSubMenuOut.Play();
				StartSoundtrackRename();
			}
			else { NoVisualizer(); }
		}

		function OnPause() { if (theMusicPlayer.transportMode != 0) { theMusicPlayer.Pause(); } }
		function OnStop() { DoMusicStop(); }
		function OnSkipForward() { SelectNextTrack(true); }
		function OnSkipBack() { SelectPrevTrack(true, true); }
		function OnXDown() { NoVisualizer(); }

		function OnInfo()
		{
			if (g_bFullVis) { NoVisualizer(); }
			else if (theMusicPlayer.transportMode == 1)
			{
				SetVisualizerAlpha(0);
				visualizerViewpoint.isBound = true;
				theMusicPlayJoystick.enableSecretKey = false; // turn checking off
				theScreenSaver.enabled = false;
				g_bFullVis = true;
			}
		}

		function OnKeyVerified()
		{
			if (theMusicPlayer.transportMode == 1)
			{
				SetVisualizerAlpha(0);
				visualizerViewpoint.isBound = true;
				theMusicPlayJoystick.enableSecretKey = false; // turn checking off
				theScreenSaver.enabled = false;
				g_bFullVis = true;
			}
		}
	}

	function OnActivate() { if (children[0].children.length() > 0) { EnterMusicPlay(); } }

	function OnDeactivate()
	{
		EnableAudio();
		theScreenSaver.enabled = true;
		theMusicPlayJoystick.enableSecretKey = true;
		g_bFullVis = false;
	}
}

var musicCount;
var musicScroll;
var musicSelect;
var musicButton;

function FillMusicList()
{
	var c = theMusicMenu.children[0].children[0];
	musicCount = theMusicCollection.GetSoundtrackCount();
	musicCount = musicCount + 1; // Always show Audio CD
	if (musicCount == 1) { c.MusicCountText.text = musicCount + " " + theTranslator.Translate("ITEM"); }
	else { c.MusicCountText.text = musicCount + " " + theTranslator.Translate("ITEMS"); }
	UpdateMusicList();
}

function UpdateMusicMetaData()
{
	var c = theMusicMenu.children[0].children[0];
	var str = "";
	if (musicCount == 0) { str = str + "*" + theTranslator.Translate("Please insert an audio CD") + "*\r"; }
	else if (musicSelect > 0)
	{
		var nSoundtrack = musicSelect - 1;
		var nSongCount = theMusicCollection.GetSoundtrackSongCount(nSoundtrack);
		c.MusicType.text = theTranslator.Translate("Soundtrack");
		str = str + nSongCount + " ";
		if (nSongCount == 1) { str = str + theTranslator.Translate("TRACK") + "\r"; }
		else { str = str + theTranslator.Translate("TRACKS") + "\r"; }
		c.TrackNum.text = str;
		c.TimeNum.text = theTranslator.Translate("timel") + ": " + theMusicCollection.FormatSoundtrackTime(nSoundtrack);
	}
	else
	{
		var nSongCount = theDiscDrive.getTrackCount();
		c.MusicType.text = theTranslator.Translate("audio cd");
		str = str + nSongCount + " ";
		if (nSongCount == 1) { str = str + theTranslator.Translate("TRACK") + "\r"; }
		else { str = str + theTranslator.Translate("TRACKS") + "\r"; }
		c.TrackNum.text = str;
		if(theDiscDrive.FormatTotalTime() == "") { str = theTranslator.Translate("timel") + ": 00:00"; }
		else { str = theTranslator.Translate("timel") + ": " + theDiscDrive.FormatTotalTime(); }
		c.TimeNum.text = str;
	}
}

function UpdateMusicList()
{
	var c = theMusicMenu.children[0].children[0];
	var nSoundtrackCount = theMusicCollection.GetSoundtrackCount();
	for (var i = 0; i < 8; i = i + 1)
	{
		var nSoundtrack = musicScroll + i - 1;
		if (nSoundtrack >= nSoundtrackCount)  { c.MenuButtons.children[i].visible = false; }
		else
		{
			var str;
			if (nSoundtrack < 0) { str = theTranslator.Translate("audio cd"); }
			else { str = theMusicCollection.GetSoundtrackName(nSoundtrack); }
			c.MenuButtons.children[i].children[1].children[0].geometry.text = str;
			c.MenuButtons.children[i].visible = true;
			if (i == musicButton)
			{
				if(i == 0) { c.MU_morearrow_up.children[0].appearance.material.name = "HilightedType"; }
				else { c.MU_morearrow_up.children[0].appearance.material.name = "NavType"; }
				if(i == 7) { c.MU_morearrow_down.children[0].appearance.material.name = "HilightedType"; }
				else { c.MU_morearrow_down.children[0].appearance.material.name = "NavType"; }
				c.MenuButtons.children[i].children[0].children[0].appearance.material.name = "GameHilite";
				c.MenuButtons.children[i].children[0].children[0].appearance.texture.url = "menu_hilight.xbx";
				c.MenuButtons.children[i].children[1].children[0].appearance.name = "HilightedType";
			}
			else
			{
				c.MenuButtons.children[i].children[0].children[0].appearance.material.name = "GameHilite";
				c.MenuButtons.children[i].children[0].children[0].appearance.texture.url = "outline.xbx";
				c.MenuButtons.children[i].children[1].children[0].appearance.name = "NavType";
			}
		}
	}

	c.MU_morearrow_down.visible = (musicCount - musicScroll > 8);
	c.MU_morearrow_up.visible = (musicScroll > 0);
	UpdateMusicMetaData();
	UpdateMusicIcon();
}

function UpdateMusicIcon()
{
	var c = theMusicMenu.children[0].children[0];
	if (musicSelect == 0)// select the cd icon
	{
		c.Group01.SetTranslation(12.260000, 54.869999, -30.950001);
		c.Group02.SetTranslation(12.310000, 55.189999, -30.780001);
		c.Group03.SetTranslation(12.360000, 55.500000, -30.600000);
		c.Group04.SetTranslation(12.430000, 55.830002, -30.420000);
		c.Group01.SetAlpha(0);
		c.Group02.SetAlpha(0);
		c.Group03.SetAlpha(0);
		c.Group04.SetAlpha(0);
	}
	else// select the soundtrack icon
	{
		c.Group01.SetTranslation(12.310000, 56.119999, -29.680000);
		c.Group02.SetTranslation(12.350000, 56.110001, -29.830000);
		c.Group03.SetTranslation(12.390000, 56.110001, -29.980000);
		c.Group04.SetTranslation(12.440000, 56.130001, -30.120001);
		c.Group01.SetAlpha(1);
		c.Group02.SetAlpha(1);
		c.Group03.SetAlpha(1);
		c.Group04.SetAlpha(1);
	}
}

function StartMusicLevel()
{
	FillMusicList();
	if(bGoToCDPlayer) { theMusicPlayMenu.GoTo(); }
}

DEF theMusicMenu Level
{
	archive "Music.xip"
	children
	[
		Inline
		{
			url "Music/default.xap"
			function onLoad()
			{
				musicScroll = 0;
				musicSelect = 0;
				musicButton = 0;
				StartMusicLevel();
			}
		}
	]

	shell Transform
	{
		scale 21.504 21.504 21.504
		translation -44.599998 54.270000 -186.500000
		children
		[
			DEF theMusicMenuShellSpinner Spinner
			{
				rpm 0
				axis 0 0 0
				children
				[
					DEF theMusicMenuShellWaver Waver
					{
						rpm 2.25//rpm 0.75
						children
						[
							Shape
							{
								appearance Appearance
								{
									material MaxMaterial { name "InnerWall_01" }
									texture ImageTexture
									{
										alpha true
										url "shell.xbx"
									}
								}
								geometry USE theCellWallMesh
							}
							Shape
							{
								appearance Appearance { material MaxMaterial { name "InnerWall_02" } }
								geometry Sphere { radius 1.0 }
							}
						]
					}
				]
			}
		]
	}
	tunnel Transform
	{
		children
		[
			Shape
			{
				appearance Appearance { material MaxMaterial { name "Tubes" } }
				geometry Mesh { url "Music/Tunnel_01-FACES.xm" }
			}
		]
	}
	path Viewpoint
	{
		fieldOfView 1.287000
		orientation 0.015660 0.999900 0.001474 -0.187700
		position -47.840000 53.889999 -172.199997
		jump false
	}

	control Joystick
	{
		function OnADown()
		{
			var c = theMusicMenu.children[0].children[0];
			c.MU_select_pod_HL.children[0].appearance.material.param = 1;
			PlaySoundA();
			if(musicCount > 0)
			{
				theMusicPlayMenu.GoTo();
				theMusicSubMenuIn.Play();
			}
		}

		function OnBDown()
		{
			var c = theMusicMenu.children[0].children[0];
			c.MU_back_pod_HL.children[0].appearance.material.param = 1;
			PlaySoundB();
			musicScroll = 0;
			musicSelect = 0;
			musicButton = 0;
			bInMusicMenu = false;
			if(bBackToLauncher) { theLauncherLevel.GoTo(); }
			else { theMainMenu.GoBackTo(); }
			theMusicMenuOut.Play();
		}

		function OnLeftThumbMoveUp()
		{
			if(bGoToCDPlayer) { return; }
			if(musicSelect <= 0) { return; }
			PlaySoundMenuChange();
			musicSelect = musicSelect - 1;
			if(musicSelect == 0) { theCDExpand.Play(); }
			if(musicButton == 0) { musicScroll = musicScroll - 1; }
			else { musicButton = musicButton - 1; }
			UpdateMusicList();
		}

		function OnLeftThumbMoveDown()
		{
			if(bGoToCDPlayer) { return; }
			if(musicSelect >= musicCount - 1) { return; }
			PlaySoundMenuChange();
			musicSelect = musicSelect + 1;
			if(musicSelect == 1) { theCDExpand.Play(); }
			if(musicButton == 7) { musicScroll = musicScroll + 1; }
			else { musicButton = musicButton + 1; }
			UpdateMusicList();
		}
	}

	function OnActivate()
	{
		EnableAudio();
		if(children[0].children.length() > 0) { StartMusicLevel(); }
	}
}
